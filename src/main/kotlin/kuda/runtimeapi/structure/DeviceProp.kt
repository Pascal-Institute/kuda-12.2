package kuda.runtimeapi.structure

//https://docs.nvidia.com/cuda/cuda-runtime-api/structcudaDeviceProp.html#structcudaDeviceProp

data class DeviceProp(
    val name: String,
    val uuid: ByteArray, // Assuming cudaUUID_t is a string representation
    val totalGlobalMem: Long,
    val sharedMemPerBlock: Long,
    val regsPerBlock: Int,
    val warpSize: Int,
    val memPitch: Long,
    val maxThreadsPerBlock: Int,
    val maxThreadsDim: IntArray,
    val maxGridSize: IntArray,
    val clockRate: Int,
    val totalConstMem: Long,
    val major: Int,
    val minor: Int,
    val textureAlignment: Long,
    val texturePitchAlignment: Long,
    val deviceOverlap: Int,
    val multiProcessorCount: Int,
    val kernelExecTimeoutEnabled: Int,
    val integrated: Int,
    val canMapHostMemory: Int,
    val computeMode: Int,
    val maxTexture1D: Int,
    val maxTexture1DMipmap: Int,
    val maxTexture1DLinear: Int,
    val maxTexture2D: IntArray,
    val maxTexture2DMipmap: IntArray,
    val maxTexture2DLinear: IntArray,
    val maxTexture2DGather: IntArray,
    val maxTexture3D: IntArray,
    val maxTexture3DAlt: IntArray,
    val maxTextureCubemap: Int,
    val maxTexture1DLayered: IntArray,
    val maxTexture2DLayered: IntArray,
    val maxTextureCubemapLayered: IntArray,
    val maxSurface1D: Int,
    val maxSurface2D: IntArray,
    val maxSurface3D: IntArray,
    val maxSurface1DLayered: IntArray,
    val maxSurface2DLayered: IntArray,
    val maxSurfaceCubemap: Int,
    val maxSurfaceCubemapLayered: IntArray,
    val surfaceAlignment: Long,
    val concurrentKernels: Int,
    val ECCEnabled: Int,
    val pciBusID: Int,
    val pciDeviceID: Int,
    val pciDomainID: Int,
    val tccDriver: Int,
    val asyncEngineCount: Int,
    val unifiedAddressing: Int,
    val memoryClockRate: Int,
    val memoryBusWidth: Int,
    val l2CacheSize: Int,
    val persistingL2CacheMaxSize: Int,
    val maxThreadsPerMultiProcessor: Int,
    val streamPrioritiesSupported: Int,
    val globalL1CacheSupported: Int,
    val localL1CacheSupported: Int,
    val sharedMemPerMultiprocessor: Long,
    val regsPerMultiprocessor: Int,
    val managedMemory: Int,
    val isMultiGpuBoard: Int,
    val multiGpuBoardGroupID: Int,
    val singleToDoublePrecisionPerfRatio: Int,
    val pageableMemoryAccess: Int,
    val concurrentManagedAccess: Int,
    val computePreemptionSupported: Int,
    val canUseHostPointerForRegisteredMem: Int,
    val cooperativeLaunch: Int,
    val cooperativeMultiDeviceLaunch: Int,
    val pageableMemoryAccessUsesHostPageTables: Int,
    val directManagedMemAccessFromHost: Int,
    val accessPolicyMaxWindowSize: Int
)